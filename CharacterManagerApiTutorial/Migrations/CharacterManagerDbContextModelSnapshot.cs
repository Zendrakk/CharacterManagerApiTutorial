// <auto-generated />
using System;
using CharacterManagerApiTutorial.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CharacterManagerApiTutorial.Migrations
{
    [DbContext(typeof(CharacterManagerDbContext))]
    partial class CharacterManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("RealmId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.CharacterMappings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CharacterMappings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 2,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 3,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 4,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 5,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 6,
                            FactionId = 1,
                            RaceId = 1
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 1,
                            FactionId = 1,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            FactionId = 1,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 5,
                            FactionId = 1,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 6,
                            FactionId = 1,
                            RaceId = 2
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            FactionId = 1,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 3,
                            FactionId = 1,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 4,
                            FactionId = 1,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 5,
                            FactionId = 1,
                            RaceId = 3
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 1,
                            FactionId = 2,
                            RaceId = 4
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 2,
                            FactionId = 2,
                            RaceId = 4
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 4,
                            FactionId = 2,
                            RaceId = 4
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 1,
                            FactionId = 2,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 2,
                            FactionId = 2,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 3,
                            FactionId = 2,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            FactionId = 2,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 5,
                            FactionId = 2,
                            RaceId = 5
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 1,
                            FactionId = 2,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 2,
                            FactionId = 2,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 3,
                            FactionId = 2,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 4,
                            FactionId = 2,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 5,
                            FactionId = 2,
                            RaceId = 6
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 6,
                            FactionId = 2,
                            RaceId = 6
                        });
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.ClassType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClassTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Warrior"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Archer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wizard"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ninja"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Medic"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Paladin"
                        });
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.FactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Light Side"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dark Side"
                        });
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.RaceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RaceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Human"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dwarf"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Elf"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Orc"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Zombie"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Alien"
                        });
                });

            modelBuilder.Entity("CharacterManagerApiTutorial.Models.Realm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Realms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Frostgard",
                            Type = "Neutral"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Barren Land",
                            Type = "Neutral"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wraithwind",
                            Type = "PVP"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Amber Expanse",
                            Type = "Neutral"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Boiling Isle",
                            Type = "PVP"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
